import sys
import re

header = """\
------------------------------------------------------------------------
--                                                                          --
--                            GNAT2WHY COMPONENTS                           --
--                                                                          --
--                     G N A T 2 W H Y - K E Y W O R D S                     --
--                                                                          --
--                                 B o d y                                  --
--                                                                          --
-------------------------------------------------------------------------------
--
-- Copyright (c) 2024, NeXTech Corporation. All rights reserved.
-- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
--
-- This code is distributed in the hope that it will be useful, but WITHOUT
-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-- version 2 for more details (a copy is included in the LICENSE file that
-- accompanied this code).
--
-- Author(-s): Tunjay Akbarli (tunjayakbarli@it-gss.com)
--             Tural Ghuliev (turalquliyev@it-gss.com)
--
-------------------------------------------------------------------------------
------------------------------------------------------------------------------
"""

prelude = """
package body Why.Keywords is
   --  This file is automatically generated by scripts/why3keywods.py

   procedure Update_Keywords (Keywords : out String_Sets.Set) is
   begin
      --  This part is automatically generated
"""

postlude = """
   end Update_Keywords;

end Why.Keywords;
"""

regexp = re.compile('.*"([a-z]*)", [A-Z]*;.*')


def find_keywords(input_file):
    result = ""
    update = '      Keywords.Insert ("'
    input_file = open(input_file, "r")
    for line in input_file:
        x = re.search(regexp, line)
        if x is not None and x.group(1) is not None:
            result = result + (update + x.group(1) + '");\n')
    return result


f = open(sys.argv[2], "w", newline="\n")

try:
    update = find_keywords(sys.argv[1])
except Exception:
    print("Generation of Keywords: Abort")
    print("Problem during the opening or parsing of lexer.mll")
    print("Please check you are in developer build")
    exit(1)

f.write(header + prelude + update + postlude)
