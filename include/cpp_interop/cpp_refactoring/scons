# Import SCons builder methods
Import('env')

# Define the environment
env = Environment()

# Define the dependencies
llvm_project_clang_tooling = env.Library(
    target='llvm-project/clang/tooling',
    source=['tooling.cpp'] # Placeholder for actual source files
)

# Define cc_binary
cpp_refactoring = env.Program(
    target='cpp_refactoring',
    source=['main.cpp'],
    LIBS=[llvm_project_clang_tooling]
)

# Define cc_library for 'matcher'
matcher = env.Library(
    target='matcher',
    source=['matcher.cpp'],
    LIBS=[llvm_project_clang_tooling]
)

# Define cc_library for 'fn_inserter'
fn_inserter = env.Library(
    target='fn_inserter',
    source=['fn_inserter.cpp'],
    LIBS=[matcher]
)

# Define cc_test for 'fn_inserter_test'
fn_inserter_test = env.Program(
    target='fn_inserter_test',
    source=['fn_inserter_test.cpp'],
    LIBS=[fn_inserter, matcher]
)

# Repeat the above pattern for 'for_range', 'var_decl', and their tests

# Finally, define the default targets
Default(cpp_refactoring, fn_inserter_test)
