//===--- RuntimeFunctions.def - Runtime Functions Database ------*- C++ -*-===//
//
/*
 * Copyright (c) 2024, NeXTech Corporation. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * Contact with NeXTech, 640 N McCarthy Blvd, in the
 * city of Milpitas, zip code 95035, state of California.
 * or visit www.it-gss.com if you need additional information or have any
 * questions.
 */

// Author(-s): Tunjay Akbarli (tunjayakbarli@it-gss.com)
//
//===----------------------------------------------------------------------===//
//
// This file defines x-macros used for metaprogramming with the set of
// runtime functions.
//
// Runtime functions that read from object arguments cannot be marked
// ReadNone. Otherwise the objects may be freed before the runtime call.
// Runtime functions that instantiate metadata cannot be marked ReadNone
// or else they could be moved out of blocks controlled by a availability check.
//
//===----------------------------------------------------------------------===//

/// FUNCTION(Id, Name, CC, Availability, ReturnTys, ArgTys, Attrs, Effect)
///   Makes available as "Id" the following runtime function:
///     ReturnTy Name(ArgTys...);
///   ReturnTys is a call to RETURNS, which takes a non-empty list
///     of expressions meant to be looked up in IRGenModule.
///   ArgTys is either NO_ARGS or a call to ARGS, which takes a non-empty
///     list of expressions meant to be looked up in IRGenModule.
///   Attrs is a parenthesized list of attributes.
///   Effect is a list of runtime effects as defined by RuntimeEffect.
///   MemEffects is a list of memory effects
///
///   By default, passes Id to FUNCTION_ID.  Therefore, the valid uses of
///   this database define either:
///     FUNCTION_ID
///   or all of the following:
///     FUNCTION
///     RETURNS
///     ARGS
///     NO_ARGS
///     ATTRS
///     NO_ATTRS
///     MEMEFFECTS
///     UNKNOWN_MEMEFFECTS

#ifndef FUNCTION
#define FUNCTION(Id, Name, CC, Availability, ReturnTys, ArgTys, Attrs, Effect, MemEffects) \
  FUNCTION_ID(Id)
#endif

FUNCTION(AllocBox, nextcode_allocBox, NeXTCodeCC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy, OpaquePtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)

//  BoxPair nextcode_makeBoxUnique(OpaqueValue *buffer, Metadata *type, size_t alignMask);
FUNCTION(MakeBoxUnique,
         nextcode_makeBoxUnique,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy, OpaquePtrTy),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)

FUNCTION(DeallocBox, nextcode_deallocBox, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)

// nextcode_projectBox reads object metadata so cannot be marked ReadNone.
FUNCTION(ProjectBox, nextcode_projectBox, C_CC, AlwaysAvailable,
         RETURNS(OpaquePtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         MEMEFFECTS(ArgMemReadOnly))

FUNCTION(AllocEmptyBox, nextcode_allocEmptyBox, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// RefCounted *nextcode_allocObject(Metadata *type, size_t size, size_t alignMask);
FUNCTION(AllocObject, nextcode_allocObject, C_CC,  AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)

// HeapObject *nextcode_initStackObject(HeapMetadata const *metadata,
//                                   HeapObject *object);
FUNCTION(InitStackObject, nextcode_initStackObject, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy, RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// HeapObject *nextcode_initStaticObject(HeapMetadata const *metadata,
//                                    HeapObject *object);
FUNCTION(InitStaticObject, nextcode_initStaticObject, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy, RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Locking),
         UNKNOWN_MEMEFFECTS)

// void nextcode_verifyEndOfLifetime(HeapObject *object);
FUNCTION(VerifyEndOfLifetime, nextcode_verifyEndOfLifetime, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_deallocObject(HeapObject *obj, size_t size, size_t alignMask);
FUNCTION(DeallocObject, nextcode_deallocObject, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_deallocUninitializedObject(HeapObject *obj, size_t size, size_t alignMask);
FUNCTION(DeallocUninitializedObject, nextcode_deallocUninitializedObject,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_deallocClassInstance(HeapObject *obj, size_t size, size_t alignMask);
FUNCTION(DeallocClassInstance, nextcode_deallocClassInstance, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_deallocPartialClassInstance(HeapObject *obj, HeapMetadata *type, size_t size, size_t alignMask);
FUNCTION(DeallocPartialClassInstance, nextcode_deallocPartialClassInstance,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, TypeMetadataPtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_slowAlloc(size_t size, size_t alignMask);
FUNCTION(SlowAlloc, nextcode_slowAlloc, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_slowDealloc(void *ptr, size_t size, size_t alignMask);
FUNCTION(SlowDealloc, nextcode_slowDealloc, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, SizeTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_willThrow(error *ptr);
FUNCTION(WillThrow, nextcode_willThrow, NeXTCodeCC,  AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, ErrorPtrTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_errorInMain(error *ptr);
FUNCTION(ErrorInMain, nextcode_errorInMain, NeXTCodeCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_unexpectedError(error *ptr);
FUNCTION(UnexpectedError, nextcode_unexpectedError, NeXTCodeCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind, NoReturn),
         EFFECT(NoEffect, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_copyPOD(void *dest, void *src, Metadata *self);
FUNCTION(CopyPOD, nextcode_copyPOD, C_CC, AlwaysAvailable,
         RETURNS(OpaquePtrTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_retain(void *ptr);
FUNCTION(NativeStrongRetain, nextcode_retain, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_release(void *ptr);
FUNCTION(NativeStrongRelease, nextcode_release, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_retain_n(void *ptr, int32_t n);
FUNCTION(NativeStrongRetainN, nextcode_retain_n, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_release_n(void *ptr, int32_t n);
FUNCTION(NativeStrongReleaseN, nextcode_release_n, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_setDeallocating(void *ptr);
FUNCTION(NativeSetDeallocating, nextcode_setDeallocating,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_nonatomic_retain_n(void *ptr, int32_t n);
FUNCTION(NativeNonAtomicStrongRetainN, nextcode_nonatomic_retain_n, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonatomic_release_n(void *ptr, int32_t n);
FUNCTION(NativeNonAtomicStrongReleaseN, nextcode_nonatomic_release_n, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_unknownObjectRetain_n(void *ptr, int32_t n);
FUNCTION(UnknownObjectRetainN, nextcode_unknownObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_unknownObjectRelease_n(void *ptr, int32_t n);
FUNCTION(UnknownObjectReleaseN, nextcode_unknownObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_nonatomic_unknownObjectRetain_n(void *ptr, int32_t n);
FUNCTION(NonAtomicUnknownObjectRetainN, nextcode_nonatomic_unknownObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonatomic_unknownObjectRelease_n(void *ptr, int32_t n);
FUNCTION(NonAtomicUnknownObjectReleaseN, nextcode_nonatomic_unknownObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_bridgeObjectRetain_n(void *ptr, int32_t n);
FUNCTION(BridgeObjectRetainN, nextcode_bridgeObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_bridgeObjectRelease_n(void *ptr, int32_t n);
FUNCTION(BridgeObjectReleaseN, nextcode_bridgeObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonatomic_bridgeObjectRetain_n(void *ptr, int32_t n);
FUNCTION(NonAtomicBridgeObjectRetainN, nextcode_nonatomic_bridgeObjectRetain_n,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonatomic_bridgeObjectRelease_n(void *ptr, int32_t n);
FUNCTION(NonAtomicBridgeObjectReleaseN, nextcode_nonatomic_bridgeObjectRelease_n,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_nonatomic_retain(void *ptr);
FUNCTION(NativeNonAtomicStrongRetain, nextcode_nonatomic_retain,
         C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonatomic_release(void *ptr);
FUNCTION(NativeNonAtomicStrongRelease, nextcode_nonatomic_release,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_tryRetain(void *ptr);
FUNCTION(NativeTryRetain, nextcode_tryRetain, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RefCounting, Locking),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isDeallocating(void *ptr);
FUNCTION(IsDeallocating, nextcode_isDeallocating, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_unknownObjectRetain(void *ptr);
FUNCTION(UnknownObjectRetain, nextcode_unknownObjectRetain, C_CC, AlwaysAvailable,
         RETURNS(UnknownRefCountedPtrTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_unknownObjectRelease(void *ptr);
FUNCTION(UnknownObjectRelease, nextcode_unknownObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_nonatomic_unknownObjectRetain(void *ptr);
FUNCTION(NonAtomicUnknownObjectRetain, nextcode_nonatomic_unknownObjectRetain,
         C_CC, AlwaysAvailable,
         RETURNS(UnknownRefCountedPtrTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonatomic_unknownObjectRelease(void *ptr);
FUNCTION(NonAtomicUnknownObjectRelease, nextcode_nonatomic_unknownObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_bridgeObjectRetain(void *ptr);
FUNCTION(BridgeObjectStrongRetain, nextcode_bridgeObjectRetain,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_bridgeRelease(void *ptr);
FUNCTION(BridgeObjectStrongRelease, nextcode_bridgeObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_nonatomic_bridgeObjectRetain(void *ptr);
FUNCTION(NonAtomicBridgeObjectStrongRetain, nextcode_nonatomic_bridgeObjectRetain,
         C_CC, AlwaysAvailable,
         RETURNS(BridgeObjectPtrTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, FirstParamReturned),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonatomic_bridgeRelease(void *ptr);
FUNCTION(NonAtomicBridgeObjectStrongRelease,
         nextcode_nonatomic_bridgeObjectRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)


// error *nextcode_errorRetain(error *ptr);
FUNCTION(ErrorStrongRetain, nextcode_errorRetain,
         C_CC, AlwaysAvailable,
         RETURNS(ErrorPtrTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_errorRelease(void *ptr);
FUNCTION(ErrorStrongRelease, nextcode_errorRelease,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

#define NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Nativeness, SymName, UnknownPrefix) \
  /* void nextcode_##SymName##Destroy(Name##Reference *object); */ \
  FUNCTION(Nativeness##Name##Destroy, nextcode_##SymName##Destroy, \
           C_CC, AlwaysAvailable, \
           RETURNS(VoidTy), \
           ARGS(Name##ReferencePtrTy), \
           ATTRS(NoUnwind), \
           EFFECT(RefCounting, Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* void nextcode_##SymName##Init(Name##Reference *object, void *value); */ \
  FUNCTION(Nativeness##Name##Init, nextcode_##SymName##Init, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, UnknownPrefix##RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *nextcode_##SymName##Assign(Name##Reference *object, void *value); */ \
  FUNCTION(Nativeness##Name##Assign, nextcode_##SymName##Assign, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, UnknownPrefix##RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned), \
           EFFECT(RefCounting, Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* void *nextcode_##SymName##Load(Name##Reference *object); */ \
  FUNCTION(Nativeness##Name##LoadStrong, nextcode_##SymName##LoadStrong, \
           C_CC, AlwaysAvailable, \
           RETURNS(UnknownPrefix##RefCountedPtrTy), \
           ARGS(Name##ReferencePtrTy), \
           ATTRS(NoUnwind, WillReturn), \
           EFFECT(NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* void *nextcode_##SymName##Take(Name##Reference *object); */ \
  FUNCTION(Nativeness##Name##TakeStrong, nextcode_##SymName##TakeStrong, \
           C_CC, AlwaysAvailable, \
           RETURNS(UnknownPrefix##RefCountedPtrTy), \
           ARGS(Name##ReferencePtrTy), \
           ATTRS(NoUnwind, WillReturn), \
           EFFECT(NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *nextcode_##SymName##CopyInit(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##CopyInit, nextcode_##SymName##CopyInit, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RefCounting), \
           UNKNOWN_MEMEFFECTS) \
  /* void *nextcode_##SymName##TakeInit(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##TakeInit, nextcode_##SymName##TakeInit, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(NoEffect), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *nextcode_##SymName##CopyAssign(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##CopyAssign, nextcode_##SymName##CopyAssign, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned), \
           EFFECT(RefCounting, Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* Name##Reference *nextcode_##SymName##TakeAssign(Name##Reference *dest, Name##Reference *src); */ \
  FUNCTION(Nativeness##Name##TakeAssign, nextcode_##SymName##TakeAssign, \
           C_CC, AlwaysAvailable, \
           RETURNS(Name##ReferencePtrTy), \
           ARGS(Name##ReferencePtrTy, Name##ReferencePtrTy), \
           ATTRS(NoUnwind, FirstParamReturned), \
           EFFECT(RefCounting, Deallocating), \
           UNKNOWN_MEMEFFECTS)

#define NEVER_LOADABLE_CHECKED_REF_STORAGE(Name, name, ...) \
  NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Native, name, ) \
  NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Unknown, unknownObject##Name, Unknown)
#define LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, Prefix, prefix) \
  /* void *nextcode_##prefix##name##Retain(void *ptr); */ \
  FUNCTION(Prefix##Name##Retain, nextcode_##prefix##name##Retain, \
           C_CC, AlwaysAvailable, \
           RETURNS(RefCountedPtrTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RefCounting), \
           UNKNOWN_MEMEFFECTS) \
  /* void nextcode_##prefix##name##Release(void *ptr); */ \
  FUNCTION(Prefix##Name##Release, nextcode_##prefix##name##Release, \
           C_CC, AlwaysAvailable, \
           RETURNS(VoidTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind), \
           EFFECT(RefCounting, Deallocating), \
           UNKNOWN_MEMEFFECTS) \
  /* void *nextcode_##prefix##name##RetainStrong(void *ptr); */ \
  FUNCTION(Prefix##StrongRetain##Name, nextcode_##prefix##name##RetainStrong, \
           C_CC, AlwaysAvailable, \
           RETURNS(RefCountedPtrTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind, FirstParamReturned, WillReturn), \
           EFFECT(RefCounting), \
           UNKNOWN_MEMEFFECTS) \
  /* void nextcode_##prefix##name##RetainStrongAndRelease(void *ptr); */ \
  FUNCTION(Prefix##StrongRetainAnd##Name##Release, \
           nextcode_##prefix##name##RetainStrongAndRelease, \
           C_CC, AlwaysAvailable, \
           RETURNS(VoidTy), \
           ARGS(RefCountedPtrTy), \
           ATTRS(NoUnwind), \
           EFFECT(RefCounting), \
           UNKNOWN_MEMEFFECTS)
#define SOMETIMES_LOADABLE_CHECKED_REF_STORAGE(Name, name, ...) \
  NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, Unknown, unknownObject##Name, Unknown) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, Native, ) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, NonAtomicNative, nonatomic_)
#define ALWAYS_LOADABLE_CHECKED_REF_STORAGE(Name, name, ...) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, Native, ) \
  LOADABLE_CHECKED_REF_STORAGE_HELPER(Name, name, NonAtomicNative, nonatomic_)
#include "nextcode/AST/ReferenceStorage.def"
#undef NEVER_LOADABLE_CHECKED_REF_STORAGE_HELPER
#undef LOADABLE_CHECKED_REF_STORAGE_HELPER

// bool nextcode_isUniquelyReferencedNonObjC(const void *);
FUNCTION(IsUniquelyReferencedNonObjC, nextcode_isUniquelyReferencedNonObjC,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isUniquelyReferencedNonObjC_nonNull(const void *);
FUNCTION(IsUniquelyReferencedNonObjC_nonNull,
         nextcode_isUniquelyReferencedNonObjC_nonNull,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isUniquelyReferencedNonObjC_nonNull_bridgeObject(
//   uintptr_t bits);
FUNCTION(IsUniquelyReferencedNonObjC_nonNull_bridgeObject,
         nextcode_isUniquelyReferencedNonObjC_nonNull_bridgeObject,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isUniquelyReferenced(const void *);
FUNCTION(IsUniquelyReferenced, nextcode_isUniquelyReferenced,
         C_CC, ObjCIsUniquelyReferencedAvailability,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isUniquelyReferenced_nonNull(const void *);
FUNCTION(IsUniquelyReferenced_nonNull,
         nextcode_isUniquelyReferenced_nonNull,
         C_CC, ObjCIsUniquelyReferencedAvailability,
         RETURNS(Int1Ty),
         ARGS(UnknownRefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isUniquelyReferenced_nonNull_bridgeObject(
//   uintptr_t bits);
FUNCTION(IsUniquelyReferenced_nonNull_bridgeObject,
         nextcode_isUniquelyReferenced_nonNull_bridgeObject,
         C_CC, ObjCIsUniquelyReferencedAvailability,
         RETURNS(Int1Ty),
         ARGS(BridgeObjectPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isUniquelyReferenced_native(const struct HeapObject *);
FUNCTION(IsUniquelyReferenced_native, nextcode_isUniquelyReferenced_native,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isUniquelyReferenced_nonNull_native(const struct HeapObject *);
FUNCTION(IsUniquelyReferenced_nonNull_native,
         nextcode_isUniquelyReferenced_nonNull_native,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind, ZExt, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// bool nextcode_isEscapingClosureAtFileLocation(const struct HeapObject *object,
//                                            const unsigned char *filename,
//                                            int32_t filenameLength,
//                                            int32_t line,
//                                            int32_t col,
//                                            unsigned type);
FUNCTION(IsEscapingClosureAtFileLocation, nextcode_isEscapingClosureAtFileLocation,
         C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(RefCountedPtrTy, Int8PtrTy, Int32Ty, Int32Ty, Int32Ty, Int32Ty),
         ATTRS(NoUnwind, ZExt),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayInitWithCopy(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithCopy, nextcode_arrayInitWithCopy,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayInitWithTakeNoAlias(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithTakeNoAlias, nextcode_arrayInitWithTakeNoAlias,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayInitWithTakeFrontToBack(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithTakeFrontToBack, nextcode_arrayInitWithTakeFrontToBack,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayInitWithTakeBackToFront(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayInitWithTakeBackToFront, nextcode_arrayInitWithTakeBackToFront,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayAssignWithCopyNoAlias(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithCopyNoAlias, nextcode_arrayAssignWithCopyNoAlias,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayAssignWithCopyFrontToBack(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithCopyFrontToBack, nextcode_arrayAssignWithCopyFrontToBack,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayAssignWithCopyBackToFront(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithCopyBackToFront, nextcode_arrayAssignWithCopyBackToFront,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayAssignWithTake(opaque*, opaque*, size_t, type*);
FUNCTION(ArrayAssignWithTake, nextcode_arrayAssignWithTake, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void nextcode_arrayDestroy(opaque*, size_t, type*);
FUNCTION(ArrayDestroy, nextcode_arrayDestroy, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// Metadata *nextcode_getFunctionTypeMetadata(unsigned long flags,
//                                         const Metadata **parameters,
//                                         const uint32_t *parameterFlags,
//                                         const Metadata *result);
FUNCTION(GetFunctionMetadata, nextcode_getFunctionTypeMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// nextcode_getFunctionTypeMetadataDifferentiable(unsigned long flags,
//                                             unsigned long diffKind,
//                                             const Metadata **parameters,
//                                             const uint32_t *parameterFlags,
//                                             const Metadata *result);
FUNCTION(GetFunctionMetadataDifferentiable,
         nextcode_getFunctionTypeMetadataDifferentiable,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// nextcode_getExtendedFunctionTypeMetadata(unsigned long flags,
//                                       unsigned long diffKind,
//                                       const Metadata **parameters,
//                                       const uint32_t *parameterFlags,
//                                       const Metadata *result,
//                                       const Metadata *globalActor,
//                                       uint32_t extendedflags,
//                                       const Metadata *thrownError);
FUNCTION(GetFunctionMetadataExtended,
         nextcode_getExtendedFunctionTypeMetadata,
         C_CC, TypedThrowsAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy,
              TypeMetadataPtrTy,
              Int32Ty,
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// nextcode_getFunctionTypeMetadataGlobalActor(unsigned long flags,
//                                          unsigned long diffKind,
//                                          const Metadata **parameters,
//                                          const uint32_t *parameterFlags,
//                                          const Metadata *result,
//                                          const Metadata *globalActor);
FUNCTION(GetFunctionMetadataGlobalActor,
         nextcode_getFunctionTypeMetadataGlobalActor,
         C_CC, ConcurrencyAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy,
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *
// nextcode_getFunctionTypeMetadataGlobalActorBackDeploy(unsigned long flags,
//                                                    unsigned long diffKind,
//                                               const Metadata **parameters,
//                                               const uint32_t *parameterFlags,
//                                               const Metadata *result,
//                                               const Metadata *globalActor);
FUNCTION(GetFunctionMetadataGlobalActorBackDeploy,
         nextcode_getFunctionTypeMetadataGlobalActorBackDeploy,
         C_CC, OpaqueTypeAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy,
              SizeTy,
              TypeMetadataPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo(0),
              TypeMetadataPtrTy,
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *nextcode_getFunctionTypeMetadata0(unsigned long flags,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata0, nextcode_getFunctionTypeMetadata0,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadNone))

// Metadata *nextcode_getFunctionTypeMetadata1(unsigned long flags,
//                                          const Metadata *arg0,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata1, nextcode_getFunctionTypeMetadata1,
        C_CC, AlwaysAvailable,
        RETURNS(TypeMetadataPtrTy),
        ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy),
        ATTRS(NoUnwind),
        EFFECT(MetaData),
        MEMEFFECTS(ReadNone))

// Metadata *nextcode_getFunctionTypeMetadata2(unsigned long flags,
//                                          const Metadata *arg0,
//                                          const Metadata *arg1,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata2, nextcode_getFunctionTypeMetadata2,
        C_CC, AlwaysAvailable,
        RETURNS(TypeMetadataPtrTy),
        ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy),
        ATTRS(NoUnwind),
        EFFECT(MetaData),
        MEMEFFECTS(ReadNone))

// Metadata *nextcode_getFunctionTypeMetadata3(unsigned long flags,
//                                          const Metadata *arg0,
//                                          const Metadata *arg1,
//                                          const Metadata *arg2,
//                                          const Metadata *resultMetadata);
FUNCTION(GetFunctionMetadata3, nextcode_getFunctionTypeMetadata3,
        C_CC, AlwaysAvailable,
        RETURNS(TypeMetadataPtrTy),
        ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
             TypeMetadataPtrTy),
        ATTRS(NoUnwind),
        EFFECT(MetaData),
        MEMEFFECTS(ReadNone))

// Metadata *nextcode_getForeignTypeMetadata(Metadata *nonUnique);
FUNCTION(GetForeignTypeMetadata, nextcode_getForeignTypeMetadata,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadNone)) // only writes to runtime-private fields

// NEXTCODE_RUNTIME_EXPORT
// NEXTCODE_CC(nextcode)
// bool nextcode_compareTypeContextDescriptors(const TypeContextDescriptor *lhs,
//                                          const TypeContextDescriptor *rhs);
FUNCTION(CompareTypeContextDescriptors, 
         nextcode_compareTypeContextDescriptors, NeXTCodeCC, 
         CompareTypeContextDescriptorsAvailability,
         RETURNS(Int1Ty),
         ARGS(TypeContextDescriptorPtrTy, 
              TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect), // ?
         MEMEFFECTS(ReadNone))

// MetadataResponse nextcode_getSingletonMetadata(MetadataRequest request,
//                                             TypeContextDescriptor *type);
FUNCTION(GetSingletonMetadata, nextcode_getSingletonMetadata,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))

// MetadataResponse nextcode_getGenericMetadata(MetadataRequest request,
//                                           const void * const *arguments,
//                                           TypeContextDescriptor *type);
FUNCTION(GetGenericMetadata, nextcode_getGenericMetadata,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse nextcode_getCanonicalSpecializedMetadata(MetadataRequest request,
//                                                        Metadata *candidate);
FUNCTION(GetCanonicalSpecializedMetadata, nextcode_getCanonicalSpecializedMetadata,
         NeXTCodeCC, GetCanonicalSpecializedMetadataAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse
// nextcode_getCanonicalPrespecializedGenericMetadata(MetadataRequest request,
//                          const void * const *arguments,
//                          const TypeContextDescriptor *description,
//                          nextcode_once_t *cachedFlag)
FUNCTION(GetCanonicalPrespecializedGenericMetadata, 
         nextcode_getCanonicalPrespecializedGenericMetadata,
         NeXTCodeCC, GetCanonicalPrespecializedGenericMetadataAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, TypeContextDescriptorPtrTy, OnceTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse nextcode_getOpaqueTypeMetadata(MetadataRequest request,
//                                     const void * const *arguments,
//                                     const void *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeMetadata, nextcode_getOpaqueTypeMetadata,
         NeXTCodeCC, OpaqueTypeAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))


// MetadataResponse nextcode_getOpaqueTypeMetadata2(MetadataRequest request,
//                                     const void * const *arguments,
//                                     const OpaqueTypeDescriptor *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeMetadata2, nextcode_getOpaqueTypeMetadata2,
         NeXTCodeCC, SignedDescriptorAvailability,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))


// const WitnessTable *nextcode_getOpaqueTypeConformance(const void * const *arguments,
//                                     const OpaqueTypeDescriptor *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeConformance, nextcode_getOpaqueTypeConformance,
         NeXTCodeCC, OpaqueTypeAvailability,
         RETURNS(WitnessTablePtrTy),
         ARGS(Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// const WitnessTable *nextcode_getOpaqueTypeConformance2(const void * const *arguments,
//                                     const OpaqueTypeDescriptor *descriptor,
//                                     uintptr_t index);
FUNCTION(GetOpaqueTypeConformance2, nextcode_getOpaqueTypeConformance2,
         NeXTCodeCC, SignedDescriptorAvailability,
         RETURNS(WitnessTablePtrTy),
         ARGS(Int8PtrTy, OpaqueTypeDescriptorPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *nextcode_allocateGenericClassMetadata(ClassDescriptor *type,
//                                              const void * const *arguments,
//                                              const void *template);
FUNCTION(AllocateGenericClassMetadata, nextcode_allocateGenericClassMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// Metadata *nextcode_allocateGenericClassMetadataWithLayoutString(
//     ClassDescriptor *type,
//     const void * const *arguments,
//     const void *template);
FUNCTION(AllocateGenericClassMetadataWithLayoutString,
         nextcode_allocateGenericClassMetadataWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// Metadata *nextcode_allocateGenericValueMetadata(ValueTypeDescriptor *type,
//                                              const void * const *arguments,
//                                              const void *template,
//                                              size_t extraSize);
FUNCTION(AllocateGenericValueMetadata, nextcode_allocateGenericValueMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// Metadata *nextcode_allocateGenericValueMetadataWithLayoutString(
//     ValueTypeDescriptor *type,
//     const void * const *arguments,
//     const void *template,
//     size_t extraSize);
FUNCTION(AllocateGenericValueMetadataWithLayoutString,
         nextcode_allocateGenericValueMetadataWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrPtrTy, Int8PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// MetadataResponse nextcode_checkMetadataState(MetadataRequest request,
//                                           const Metadata *type);
FUNCTION(CheckMetadataState, nextcode_checkMetadataState,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadOnly))


// const ProtocolWitnessTable *
// nextcode_getWitnessTable(const ProtocolConformanceDescriptor *conf,
//                       const Metadata *type,
//                       const void * const *instantiationArgs);
FUNCTION(GetWitnessTable, nextcode_getWitnessTable, C_CC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(ProtocolConformanceDescriptorPtrTy,
              TypeMetadataPtrTy,
              WitnessTablePtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadOnly))

FUNCTION(GetWitnessTableRelative, nextcode_getWitnessTableRelative, C_CC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(ProtocolConformanceDescriptorPtrTy,
              TypeMetadataPtrTy,
              WitnessTablePtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadOnly))

// MetadataResponse nextcode_getAssociatedTypeWitness(
//                                            MetadataRequest request,
//                                            WitnessTable *wtable,
//                                            const Metadata *conformingType,
//                                            ProtocolRequirement *reqBase,
//                                            ProtocolRequirement *assocType);
FUNCTION(GetAssociatedTypeWitness, nextcode_getAssociatedTypeWitness,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy,
              WitnessTablePtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))
FUNCTION(GetAssociatedTypeWitnessRelative, nextcode_getAssociatedTypeWitnessRelative,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy,
              WitnessTablePtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))

// NEXTCODE_RUNTIME_EXPORT NEXTCODE_CC(nextcode)
// const WitnessTable *nextcode_getAssociatedConformanceWitness(
//                                 WitnessTable *wtable,
//                                 const Metadata *conformingType,
//                                 const Metadata *assocType,
//                                 const ProtocolRequirement *reqBase,
//                                 const ProtocolRequirement *assocConformance);
FUNCTION(GetAssociatedConformanceWitness,
         nextcode_getAssociatedConformanceWitness, NeXTCodeCC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(WitnessTablePtrTy,
              TypeMetadataPtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))
FUNCTION(GetAssociatedConformanceWitnessRelative,
         nextcode_getAssociatedConformanceWitnessRelative, NeXTCodeCC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(WitnessTablePtrTy,
              TypeMetadataPtrTy,
              TypeMetadataPtrTy,
              ProtocolRequirementStructTy->getPointerTo(),
              ProtocolRequirementStructTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))

// NEXTCODE_RUNTIME_EXPORT
//     NEXTCODE_CC(nextcode) bool nextcode_compareProtocolConformanceDescriptors(
//         const ProtocolConformanceDescriptor *lhs,
//         const ProtocolConformanceDescriptor *rhs);
FUNCTION(CompareProtocolConformanceDescriptors, 
         nextcode_compareProtocolConformanceDescriptors, NeXTCodeCC, 
         CompareProtocolConformanceDescriptorsAvailability,
         RETURNS(Int1Ty),
         ARGS(ProtocolConformanceDescriptorPtrTy, 
              ProtocolConformanceDescriptorPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect), // ?
         MEMEFFECTS(ReadNone))

// NEXTCODE_RUNTIME_EXPORT NEXTCODE_CC(nextcode)
// const Metadata * const *
// nextcode_allocateMetadataPack(const Metadata * const *ptr, size_t count);
FUNCTION(AllocateMetadataPack,
         nextcode_allocateMetadataPack, NeXTCodeCC,
         AlwaysAvailable,  // FIXME
         RETURNS(TypeMetadataPtrPtrTy),
         ARGS(TypeMetadataPtrPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         UNKNOWN_MEMEFFECTS)

// NEXTCODE_RUNTIME_EXPORT NEXTCODE_CC(nextcode)
// const WitnessTable * const *
// nextcode_allocateWitnessTablePack(const WitnessTable * const *ptr, size_t count);
FUNCTION(AllocateWitnessTablePack,
         nextcode_allocateWitnessTablePack, NeXTCodeCC,
         AlwaysAvailable,  // FIXME
         RETURNS(WitnessTablePtrPtrTy),
         ARGS(WitnessTablePtrPtrTy, SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         UNKNOWN_MEMEFFECTS)

// Metadata *nextcode_getMetatypeMetadata(Metadata *instanceTy);
FUNCTION(GetMetatypeMetadata, nextcode_getMetatypeMetadata, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))

// Metadata *nextcode_getExistentialMetatypeMetadata(Metadata *instanceTy);
FUNCTION(GetExistentialMetatypeMetadata,
         nextcode_getExistentialMetatypeMetadata, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))

// Metadata *nextcode_getObjCClassMetadata(objc_class *theClass);
FUNCTION(GetObjCClassMetadata, nextcode_getObjCClassMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadNone))

// Metadata *nextcode_getObjCClassFromMetadata(objc_class *theClass);
FUNCTION(GetObjCClassFromMetadata, nextcode_getObjCClassFromMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect), // ?
         MEMEFFECTS(ReadNone))

// Metadata *nextcode_getObjCClassFromObject(id object);
// This reads object metadata so cannot be marked ReadNone.
FUNCTION(GetObjCClassFromObject, nextcode_getObjCClassFromObject,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect), // ?
         MEMEFFECTS(ArgMemReadOnly))

// MetadataResponse nextcode_getTupleTypeMetadata(MetadataRequest request,
//                                             TupleTypeFlags flags,
//                                             Metadata * const *elts,
//                                             const char *labels,
//                                             value_witness_table_t *proposed);
FUNCTION(GetTupleMetadata, nextcode_getTupleTypeMetadata, NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, SizeTy, TypeMetadataPtrTy->getPointerTo(0),
              Int8PtrTy, WitnessTablePtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse nextcode_getTupleTypeMetadata2(MetadataRequest request,
//                                              Metadata *elt0, Metadata *elt1,
//                                              const char *labels,
//                                              value_witness_table_t *proposed);
FUNCTION(GetTupleMetadata2, nextcode_getTupleTypeMetadata2, NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
              Int8PtrTy, WitnessTablePtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// MetadataResponse nextcode_getTupleTypeMetadata3(MetadataRequest request,
//                                              Metadata *elt0, Metadata *elt1,
//                                              Metadata *elt2,
//                                              const char *labels,
//                                              value_witness_table_t *proposed);
FUNCTION(GetTupleMetadata3, nextcode_getTupleTypeMetadata3, NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataResponseTy),
         ARGS(SizeTy, TypeMetadataPtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
              Int8PtrTy, WitnessTablePtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// void nextcode_getTupleTypeLayout(TypeLayout *result,
//                               uint32_t offsets,
//                               TupleTypeFlags flags,
//                               const TypeLayout * const *elts);
FUNCTION(GetTupleLayout, nextcode_getTupleTypeLayout, NeXTCodeCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(FullTypeLayoutTy->getPointerTo(0), Int32Ty->getPointerTo(0),
              SizeTy, Int8PtrPtrTy->getPointerTo(0)),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// size_t nextcode_getTupleTypeLayout2(TypeLayout *layout,
//                                  const TypeLayout *elt0,
//                                  const TypeLayout *elt1);
FUNCTION(GetTupleLayout2, nextcode_getTupleTypeLayout2, NeXTCodeCC, AlwaysAvailable,
         RETURNS(SizeTy),
         ARGS(FullTypeLayoutTy->getPointerTo(0), Int8PtrPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// OffsetPair nextcode_getTupleTypeLayout3(TypeLayout *layout,
//                                      const TypeLayout *elt0,
//                                      const TypeLayout *elt1,
//                                      const TypeLayout *elt2);
FUNCTION(GetTupleLayout3, nextcode_getTupleTypeLayout3, NeXTCodeCC, AlwaysAvailable,
         RETURNS(OffsetPairTy),
         ARGS(FullTypeLayoutTy->getPointerTo(0),
              Int8PtrPtrTy, Int8PtrPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// Metadata *nextcode_getExistentialTypeMetadata(
//                              ProtocolClassConstraint classConstraint,
//                              const Metadata *superclassConstraint,
//                              size_t numProtocols,
//                              const ProtocolDescriptorRef *protocols);
//
// Note: ProtocolClassConstraint::Class is 0, ::Any is 1.
FUNCTION(GetExistentialMetadata,
         nextcode_getExistentialTypeMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int1Ty, TypeMetadataPtrTy, SizeTy,
              ProtocolDescriptorRefTy->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ReadOnly))


// const ExtendedExistentialTypeShape *
// nextcode_getExtendedExistentialTypeShape(
//             const NonUniqueExtendedExistentialTypeShape *nonUnique);
FUNCTION(GetExtendedExistentialTypeShape,
         nextcode_getExtendedExistentialTypeShape, C_CC,
         ParameterizedExistentialAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ArgMemOnly))

// Metadata *nextcode_getExtendedExistentialTypeMetadata(
//             const NonUniqueExtendedExistentialTypeShape *shape,
//             const void * const *generalizationArgs);
FUNCTION(GetExtendedExistentialTypeMetadata,
         nextcode_getExtendedExistentialTypeMetadata, C_CC,
         ParameterizedExistentialAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ArgMemOnly))

// Metadata *nextcode_getExtendedExistentialTypeMetadata_unique(
//             const ExtendedExistentialTypeShape *shape,
//             const void * const *generalizationArgs);
FUNCTION(GetExtendedExistentialTypeMetadataUnique,
         nextcode_getExtendedExistentialTypeMetadata_unique, C_CC,
         ParameterizedExistentialAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData), // ?
         MEMEFFECTS(ArgMemOnly))

// Metadata *nextcode_relocateClassMetadata(TypeContextDescriptor *descriptor,
//                                       const void *pattern);
FUNCTION(RelocateClassMetadata,
         nextcode_relocateClassMetadata, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeContextDescriptorPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initClassMetadata(Metadata *self,
//                              ClassLayoutFlags flags,
//                              size_t numFields,
//                              TypeLayout * const *fieldTypes,
//                              size_t *fieldOffsets);
FUNCTION(InitClassMetadata,
         nextcode_initClassMetadata, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_updateClassMetadata(Metadata *self,
//                                ClassLayoutFlags flags,
//                                size_t numFields,
//                                TypeLayout * const *fieldTypes,
//                                size_t *fieldOffsets);
FUNCTION(UpdateClassMetadata,
         nextcode_updateClassMetadata, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// MetadataDependency nextcode_initClassMetadata2(Metadata *self,
//                                             ClassLayoutFlags flags,
//                                             size_t numFields,
//                                             TypeLayout * const *fieldTypes,
//                                             size_t *fieldOffsets);
FUNCTION(InitClassMetadata2,
         nextcode_initClassMetadata2, NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataDependencyTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// MetadataDependency nextcode_updateClassMetadata2(Metadata *self,
//                                               ClassLayoutFlags flags,
//                                               size_t numFields,
//                                               TypeLayout * const *fieldTypes,
//                                               size_t *fieldOffsets);
FUNCTION(UpdateClassMetadata2,
         nextcode_updateClassMetadata2, NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataDependencyTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(),
              SizeTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// objc_class *nextcode_updatePureObjCClassMetadata(
//             objc_class *self,
//             ClassLayoutFlags flags,
//             size_t numFields,
//             TypeLayout * const *fieldTypes);
FUNCTION(UpdatePureObjCClassMetadata,
         nextcode_updatePureObjCClassMetadata, NeXTCodeCC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, SizeTy, SizeTy, Int8PtrPtrTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_lookUpClassMethod(Metadata *metadata,
//                               ClassDescriptor *description,
//                               MethodDescriptor *method);
FUNCTION(LookUpClassMethod,
         nextcode_lookUpClassMethod, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(TypeMetadataPtrTy,
              MethodDescriptorStructTy->getPointerTo(),
              TypeContextDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initStructMetadata(Metadata *structType,
//                               StructLayoutFlags flags,
//                               size_t numFields,
//                               TypeLayout * const *fieldTypes,
//                               uint32_t *fieldOffsets);
FUNCTION(InitStructMetadata,
         nextcode_initStructMetadata, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(0),
              Int32Ty->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initStructMetadataWithLayoutString(Metadata *structType,
//                                               StructLayoutFlags flags,
//                                               size_t numFields,
//                                               uint8_t * const *fieldTypes,
//                                               const uint8_t *fieldTags
//                                               uint32_t *fieldOffsets);
FUNCTION(InitStructMetadataWithLayoutString,
         nextcode_initStructMetadataWithLayoutString, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy,
              Int8PtrPtrTy->getPointerTo(0),
              Int8PtrTy,
              Int32Ty->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initEnumMetadataSingleCase(Metadata *enumType,
//                                       EnumLayoutFlags flags,
//                                       TypeLayout *payload);
FUNCTION(InitEnumMetadataSingleCase,
         nextcode_initEnumMetadataSingleCase,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initEnumMetadataSingleCaseWithLayoutString(Metadata *enumType,
//                                                       EnumLayoutFlags flags,
//                                                       Metadata *payload);
FUNCTION(InitEnumMetadataSingleCaseWithLayoutString,
         nextcode_initEnumMetadataSingleCaseWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initEnumMetadataSinglePayload(Metadata *enumType,
//                                          EnumLayoutFlags flags,
//                                          TypeLayout *payload,
//                                          unsigned num_empty_cases);
FUNCTION(InitEnumMetadataSinglePayload,
         nextcode_initEnumMetadataSinglePayload,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy, Int32Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initEnumMetadataSinglePayloadWithLayoutString(Metadata *enumType,
//                                                        EnumLayoutFlags flags,
//                                                        Metadata *payload,
//                                                    unsigned num_empty_cases);
FUNCTION(InitEnumMetadataSinglePayloadWithLayoutString,
         nextcode_initEnumMetadataSinglePayloadWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, TypeMetadataPtrTy, Int32Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initEnumMetadataMultiPayload(Metadata *enumType,
//                                         EnumLayoutFlags layoutFlags,
//                                         size_t numPayloads,
//                                         TypeLayout * const *payloadTypes);
FUNCTION(InitEnumMetadataMultiPayload,
         nextcode_initEnumMetadataMultiPayload,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy, Int8PtrPtrTy->getPointerTo(0)),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void
// nextcode_initEnumMetadataMultiPayloadWithLayoutString(Metadata *enumType,
//                                                  EnumLayoutFlags layoutFlags,
//                                                    size_t numPayloads,
//                                              Metadata * const *payloadTypes);
FUNCTION(InitEnumMetadataMultiPayloadWithLayoutString,
         nextcode_initEnumMetadataMultiPayloadWithLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, SizeTy, TypeMetadataPtrPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// int nextcode_getEnumCaseMultiPayload(opaque_t *obj, Metadata *enumTy);
FUNCTION(GetEnumCaseMultiPayload,
         nextcode_getEnumCaseMultiPayload,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         MEMEFFECTS(ReadOnly))

// int nextcode_getEnumTagSinglePayloadGeneric(opaque_t *obj,
//                                          unsigned num_empty_cases,
//                                          Metadata *payloadType,
//                         int (*getExtraInhabitantIndex)(opaque_t *obj,
//                                                        unsigned numPayloadXI,
//                                                        Metadata *payload));
FUNCTION(GetEnumTagSinglePayloadGeneric,
         nextcode_getEnumTagSinglePayloadGeneric,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(OpaquePtrTy, Int32Ty, TypeMetadataPtrTy,
              llvm::FunctionType::get(Int32Ty, {OpaquePtrTy, Int32Ty,
                                                TypeMetadataPtrTy},
                                      false)->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         MEMEFFECTS(ReadOnly))


// void nextcode_storeEnumTagSinglePayloadGeneric(opaque_t *obj,
//                                             unsigned case_index,
//                                             unsigned num_empty_cases,
//                                             Metadata *payloadType,
//                           void (*storeExtraInhabitant)(opaque_t *obj,
//                                                        unsigned case_index,
//                                                        unsigned numPayloadXI,
//                                                        Metadata *payload));
FUNCTION(StoreEnumTagSinglePayloadGeneric,
         nextcode_storeEnumTagSinglePayloadGeneric,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, Int32Ty, Int32Ty, TypeMetadataPtrTy,
              llvm::FunctionType::get(VoidTy, {OpaquePtrTy, Int32Ty, Int32Ty,
                                               TypeMetadataPtrTy},
                                      false)->getPointerTo()),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_storeEnumTagMultiPayload(opaque_t *obj, Metadata *enumTy,
//                                     int case_index);
FUNCTION(StoreEnumTagMultiPayload,
         nextcode_storeEnumTagMultiPayload,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy, Int32Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// Class object_getClass(id object);
//
// This is readonly instead of readnone because isa-rewriting can have
// a noticeable effect.
FUNCTION(GetObjectClass, object_getClass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(ObjectiveC),
         MEMEFFECTS(ReadOnly))


// id object_dispose(id object);
FUNCTION(ObjectDispose, object_dispose, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC, Deallocating),
         UNKNOWN_MEMEFFECTS)

// Class objc_lookUpClass(const char *name);
FUNCTION(LookUpClass, objc_lookUpClass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadNone))

// Class objc_setSuperclass(Class cls, Class newSuper);
FUNCTION(SetSuperclass, class_setSuperclass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)

// Metadata *nextcode_getObjectType(id object);
FUNCTION(GetObjectType, nextcode_getObjectType, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(ObjCPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// Metadata *nextcode_getDynamicType(opaque_t *obj, Metadata *self);
FUNCTION(GetDynamicType, nextcode_getDynamicType, C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(OpaquePtrTy, TypeMetadataPtrTy, Int1Ty),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(MetaData),
         MEMEFFECTS(ReadOnly))

// void *nextcode_dynamicCastClass(void*, void*);
FUNCTION(DynamicCastClass, nextcode_dynamicCastClass, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// void *nextcode_dynamicCastClassUnconditional(void*, void*);
FUNCTION(DynamicCastClassUnconditional, nextcode_dynamicCastClassUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// void *nextcode_dynamicCastObjCClass(void*, void*);
FUNCTION(DynamicCastObjCClass, nextcode_dynamicCastObjCClass,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// void *nextcode_dynamicCastObjCClassUnconditional(void*, void*);
FUNCTION(DynamicCastObjCClassUnconditional,
         nextcode_dynamicCastObjCClassUnconditional, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// void *nextcode_dynamicCastUnknownClass(void*, void*);
FUNCTION(DynamicCastUnknownClass, nextcode_dynamicCastUnknownClass,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// void *nextcode_dynamicCastUnknownClassUnconditional(void*, void*);
FUNCTION(DynamicCastUnknownClassUnconditional,
         nextcode_dynamicCastUnknownClassUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// type *nextcode_dynamicCastMetatype(type*, type*);
FUNCTION(DynamicCastMetatype, nextcode_dynamicCastMetatype,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// type *nextcode_dynamicCastMetatypeUnconditional(type*, type*);
FUNCTION(DynamicCastMetatypeUnconditional,
         nextcode_dynamicCastMetatypeUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, TypeMetadataPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// objc_class *nextcode_dynamicCastObjCClassMetatype(objc_class*, objc_class*);
FUNCTION(DynamicCastObjCClassMetatype, nextcode_dynamicCastObjCClassMetatype,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, ObjCClassPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// objc_class *nextcode_dynamicCastObjCClassMetatypeUnconditional(objc_class*, objc_class*);
FUNCTION(DynamicCastObjCClassMetatypeUnconditional,
         nextcode_dynamicCastObjCClassMetatypeUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy, ObjCClassPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadOnly))

// bool nextcode_dynamicCast(opaque*, opaque*, type*, type*, size_t);
FUNCTION(DynamicCast, nextcode_dynamicCast, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(OpaquePtrTy, OpaquePtrTy, TypeMetadataPtrTy, TypeMetadataPtrTy,
              SizeTy),
         ATTRS(ZExt, NoUnwind),
         EFFECT(Casting),
         UNKNOWN_MEMEFFECTS)

// type* nextcode_dynamicCastTypeToObjCProtocolUnconditional(type* object,
//                                               size_t numProtocols,
//                                               Protocol * const *protocols);
FUNCTION(DynamicCastTypeToObjCProtocolUnconditional,
         nextcode_dynamicCastTypeToObjCProtocolUnconditional,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         UNKNOWN_MEMEFFECTS)

// type* nextcode_dynamicCastTypeToObjCProtocolConditional(type* object,
//                                             size_t numProtocols,
//                                             Protocol * const *protocols);
FUNCTION(DynamicCastTypeToObjCProtocolConditional,
         nextcode_dynamicCastTypeToObjCProtocolConditional,
         C_CC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         UNKNOWN_MEMEFFECTS)

// id nextcode_dynamicCastObjCProtocolUnconditional(id object,
//                                               size_t numProtocols,
//                                               Protocol * const *protocols);
FUNCTION(DynamicCastObjCProtocolUnconditional,
         nextcode_dynamicCastObjCProtocolUnconditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(ObjCPtrTy, SizeTy, Int8PtrPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         UNKNOWN_MEMEFFECTS)

// id nextcode_dynamicCastObjCProtocolConditional(id object,
//                                             size_t numProtocols,
//                                             Protocol * const *protocols);
FUNCTION(DynamicCastObjCProtocolConditional,
         nextcode_dynamicCastObjCProtocolConditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(ObjCPtrTy, SizeTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         UNKNOWN_MEMEFFECTS)

// id nextcode_dynamicCastMetatypeToObjectUnconditional(type *type);
FUNCTION(DynamicCastMetatypeToObjectUnconditional,
         nextcode_dynamicCastMetatypeToObjectUnconditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(TypeMetadataPtrTy, Int8PtrTy, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadNone))

// id nextcode_dynamicCastMetatypeToObjectConditional(type *type);
FUNCTION(DynamicCastMetatypeToObjectConditional,
         nextcode_dynamicCastMetatypeToObjectConditional, C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Casting),
         MEMEFFECTS(ReadNone))

// witness_table* nextcode_conformsToProtocol(type*, protocol*);
FUNCTION(ConformsToProtocol,
         nextcode_conformsToProtocol, C_CC, AlwaysAvailable,
         RETURNS(WitnessTablePtrTy),
         ARGS(TypeMetadataPtrTy, ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadNone))

// witness_table* nextcode_conformsToProtocol2(type*, protocol*);
FUNCTION(ConformsToProtocol2,
         nextcode_conformsToProtocol2, C_CC, SignedConformsToProtocolAvailability,
         RETURNS(WitnessTablePtrTy),
         ARGS(TypeMetadataPtrTy, ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Casting),
         MEMEFFECTS(ReadNone))

// bool nextcode_isClassType(type*);
FUNCTION(IsClassType,
         nextcode_isClassType, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(TypeMetadataPtrTy),
         ATTRS(ZExt, NoUnwind, WillReturn),
         EFFECT(Casting),
         MEMEFFECTS(ReadNone))

// bool nextcode_isOptionalType(type*);
FUNCTION(IsOptionalType,
         nextcode_isOptionalType, C_CC, AlwaysAvailable,
         RETURNS(Int1Ty),
         ARGS(TypeMetadataPtrTy),
         ATTRS(ZExt, NoUnwind, WillReturn),
         EFFECT(Casting),
         MEMEFFECTS(ReadNone))

// void nextcode_once(nextcode_once_t *predicate,
//                 void (*function_code)(RefCounted*),
//                 void *context);
FUNCTION(Once, nextcode_once, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(OnceTy->getPointerTo(), Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(Locking),
         UNKNOWN_MEMEFFECTS)

// void nextcode_registerProtocols(const ProtocolRecord *begin,
//                              const ProtocolRecord *end)
FUNCTION(RegisterProtocols,
         nextcode_registerProtocols, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolRecordPtrTy, ProtocolRecordPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Locking),
         UNKNOWN_MEMEFFECTS)

// void nextcode_registerProtocolConformances(const ProtocolConformanceRecord *begin,
//                                         const ProtocolConformanceRecord *end)
FUNCTION(RegisterProtocolConformances,
         nextcode_registerProtocolConformances, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(RelativeAddressPtrTy, RelativeAddressPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Locking),
         UNKNOWN_MEMEFFECTS)
FUNCTION(RegisterTypeMetadataRecords,
         nextcode_registerTypeMetadataRecords, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataRecordPtrTy, TypeMetadataRecordPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Locking),
         UNKNOWN_MEMEFFECTS)

// void nextcode_beginAccess(void *pointer, ValueBuffer *scratch, size_t flags);
FUNCTION(BeginAccess, nextcode_beginAccess, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, getFixedBufferTy()->getPointerTo(), SizeTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ExclusivityChecking),
         UNKNOWN_MEMEFFECTS)

// void nextcode_endAccess(ValueBuffer *scratch);
FUNCTION(EndAccess, nextcode_endAccess, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(getFixedBufferTy()->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(ExclusivityChecking),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetOrigOfReplaceable, nextcode_getOrigOfReplaceable, C_CC,
         DynamicReplacementAvailability,
         RETURNS(FunctionPtrTy),
         ARGS(FunctionPtrTy->getPointerTo()),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetReplacement, nextcode_getFunctionReplacement, C_CC,
         DynamicReplacementAvailability,
         RETURNS(FunctionPtrTy),
         ARGS(FunctionPtrTy->getPointerTo(), FunctionPtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(InstantiateObjCClass, nextcode_instantiateObjCClass,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCAllocWithZone, objc_allocWithZone,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCPtrTy), ARGS(ObjCClassPtrTy), ATTRS(NoUnwind),
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSend, objc_msgSend,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendStret, objc_msgSend_stret,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuper, objc_msgSendSuper,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuperStret, objc_msgSendSuper_stret,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuper2, objc_msgSendSuper2,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCMsgSendSuperStret2, objc_msgSendSuper2_stret,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy), NO_ARGS, NO_ATTRS, EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCSelRegisterName, sel_registerName,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCSELTy), ARGS(Int8PtrTy), ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         MEMEFFECTS(ReadNone))
FUNCTION(ClassReplaceMethod, class_replaceMethod,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(ObjCClassPtrTy, Int8PtrTy, Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ClassAddProtocol, class_addProtocol,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ObjCClassPtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCGetClass, objc_getClass, C_CC,  AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCGetRequiredClass, objc_getRequiredClass, C_CC,  AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCGetMetaClass, objc_getMetaClass, C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ObjCClassGetName, class_getName, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetObjCProtocol, objc_getProtocol, C_CC, AlwaysAvailable,
         RETURNS(ProtocolDescriptorPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(AllocateObjCProtocol, objc_allocateProtocol, C_CC, AlwaysAvailable,
         RETURNS(ProtocolDescriptorPtrTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC, Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(RegisterObjCProtocol, objc_registerProtocol, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ProtocolAddMethodDescription, protocol_addMethodDescription,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolDescriptorPtrTy, Int8PtrTy, Int8PtrTy,
              ObjCBoolTy, ObjCBoolTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)
FUNCTION(ProtocolAddProtocol, protocol_addProtocol,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ProtocolDescriptorPtrTy, ProtocolDescriptorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)

FUNCTION(ObjCOptSelf, objc_opt_self,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC),
         UNKNOWN_MEMEFFECTS)

FUNCTION(Malloc, malloc, C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(SizeTy),
         NO_ATTRS,
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(Free, free, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy),
         NO_ATTRS,
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *_Block_copy(void *block);
FUNCTION(BlockCopy, _Block_copy, C_CC, AlwaysAvailable,
         RETURNS(ObjCBlockPtrTy),
         ARGS(ObjCBlockPtrTy),
         NO_ATTRS,
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)
// void _Block_release(void *block);
FUNCTION(BlockRelease, _Block_release, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ObjCBlockPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating, RefCounting),
         UNKNOWN_MEMEFFECTS)

// void nextcode_deletedMethodError();
FUNCTION(DeletedMethodError, nextcode_deletedMethodError, C_CC, AlwaysAvailable,
        RETURNS(VoidTy),
        ARGS(),
        ATTRS(NoUnwind),
        EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(AllocError, nextcode_allocError, NeXTCodeCC, AlwaysAvailable,
         RETURNS(ErrorPtrTy, OpaquePtrTy),
         ARGS(TypeMetadataPtrTy, WitnessTablePtrTy, OpaquePtrTy, Int1Ty),
         ATTRS(NoUnwind),
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(DeallocError, nextcode_deallocError, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(GetErrorValue, nextcode_getErrorValue, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ErrorPtrTy, Int8PtrPtrTy, OpenedErrorTriplePtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void __tsan_external_write(void *addr, void *caller_pc, void *tag);
// This is a Thread Sanitizer instrumentation entry point in compiler-rt.
FUNCTION(TSanInoutAccess, __tsan_external_write, C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// int32 __isPlatformVersionAtLeast(uint32_t platform, uint32_t major,
//                                  uint32_t minor, uint32_t patch);
// This a C builtin provided by compiler-rt.
FUNCTION(PlatformVersionAtLeast, __isPlatformVersionAtLeast,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int32Ty, Int32Ty, Int32Ty, Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetKeyPath, nextcode_getKeyPath, C_CC, AlwaysAvailable,
         RETURNS(RefCountedPtrTy),
         ARGS(Int8PtrTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(Allocating),
         UNKNOWN_MEMEFFECTS)
FUNCTION(CopyKeyPathTrivialIndices, nextcode_copyKeyPathTrivialIndices,
         C_CC,  AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int8PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(GetInitializedObjCClass, nextcode_getInitializedObjCClass,
         C_CC, AlwaysAvailable,
         RETURNS(ObjCClassPtrTy),
         ARGS(ObjCClassPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_objc_nextcode3ImplicitObjCEntrypoint(id self, SEL selector)
FUNCTION(NeXTCode3ImplicitObjCEntrypoint, nextcode_objc_nextcode3ImplicitObjCEntrypoint,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(ObjCPtrTy, ObjCSELTy, Int8PtrTy, SizeTy, SizeTy, SizeTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(ObjectiveC, Allocating),
         UNKNOWN_MEMEFFECTS)

FUNCTION(VerifyTypeLayoutAttribute, _nextcode_debug_verifyTypeLayoutAttribute,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, Int8PtrTy, Int8PtrTy, SizeTy, Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// float nextcode_intToFloat32(const size_t *data, IntegerLiteralFlags flags);
FUNCTION(IntToFloat32, nextcode_intToFloat32, NeXTCodeCC, AlwaysAvailable,
         RETURNS(FloatTy),
         ARGS(SizeTy->getPointerTo(), SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         MEMEFFECTS(ReadOnly))

FUNCTION(IntToFloat64, nextcode_intToFloat64, NeXTCodeCC, AlwaysAvailable,
         RETURNS(DoubleTy),
         ARGS(SizeTy->getPointerTo(), SizeTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         MEMEFFECTS(ReadOnly))

// const Metadata *nextcode_getTypeByMangledNameInContext(
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const void *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContext, nextcode_getTypeByMangledNameInContext,
         NeXTCodeCC, AlwaysAvailable,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ArgMemOnly))

// const Metadata *nextcode_getTypeByMangledNameInContext2(
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const TargetContextDescriptor<InProcess> *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContext2, nextcode_getTypeByMangledNameInContext2,
         NeXTCodeCC, SignedDescriptorAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy, Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ArgMemOnly))

// const Metadata *nextcode_getTypeByMangledNameInContextInMetadataState(
//                        size_t metadataState,
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const void *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContextInMetadataState,
         nextcode_getTypeByMangledNameInContextInMetadataState, NeXTCodeCC,
         GetTypesInAbstractMetadataStateAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy, Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy,
              Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ArgMemOnly))

// const Metadata *nextcode_getTypeByMangledNameInContextInMetadataState2(
//                        size_t metadataState,
//                        const char *typeNameStart,
//                        size_t typeNameLength,
//                        const TargetContextDescriptor<InProcess> *context,
//                        const void * const *genericArgs)
FUNCTION(GetTypeByMangledNameInContextInMetadataState2,
         nextcode_getTypeByMangledNameInContextInMetadataState2, NeXTCodeCC,
         SignedDescriptorAvailability,
         RETURNS(TypeMetadataPtrTy),
         ARGS(SizeTy, Int8PtrTy, SizeTy, TypeContextDescriptorPtrTy,
              Int8PtrPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         MEMEFFECTS(ArgMemOnly))

// AsyncTask *nextcode_task_getCurrent();s
FUNCTION(GetCurrentTask,
         nextcode_task_getCurrent, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(NeXTCodeTaskPtrTy),
         ARGS(),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Concurrency),
         MEMEFFECTS(ReadNone))

// void *nextcode_task_alloc(size_t size);
FUNCTION(TaskAlloc,
         nextcode_task_alloc, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(Int8PtrTy),
         ARGS(SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void nextcode_task_dealloc(void *ptr);
FUNCTION(TaskDealloc,
         nextcode_task_dealloc, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void nextcode_task_cancel(AsyncTask *task);
FUNCTION(TaskCancel,
         nextcode_task_cancel, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeTaskPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

// AsyncTaskAndContext nextcode_task_create(
//     size_t taskCreateFlags,
//     TaskOptionRecord *options,
//     const Metadata *futureResultType,
//     void *closureEntry, HeapObject *closureContext);
FUNCTION(TaskCreate,
         nextcode_task_create, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(AsyncTaskAndContextTy),
         ARGS(SizeTy,
              NeXTCodeTaskOptionRecordPtrTy,
              TypeMetadataPtrTy,
              Int8PtrTy,
              RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void nextcode_task_switch(AsyncContext *resumeContext,
//                        TaskContinuationFunction *resumeFunction,
//                        SerialExecutorRef newExecutor);
FUNCTION(TaskSwitchFunc,
         nextcode_task_switch, NeXTCodeAsyncCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeContextPtrTy, Int8PtrTy, ExecutorFirstTy, ExecutorSecondTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// AsyncTask *nextcode_continuation_init(AsyncContext *continuationContext,
//                                    AsyncContinuationFlags);
FUNCTION(ContinuationInit,
         nextcode_continuation_init, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(NeXTCodeTaskPtrTy),
         ARGS(ContinuationAsyncContextPtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_continuation_await(AsyncContext *continuationContext);
FUNCTION(ContinuationAwait,
         nextcode_continuation_await, NeXTCodeAsyncCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(ContinuationAsyncContextPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_continuation_resume(AsyncTask *continuation);
FUNCTION(ContinuationResume,
         nextcode_continuation_resume, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeTaskPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_continuation_throwingResume(AsyncTask *continuation);
FUNCTION(ContinuationThrowingResume,
         nextcode_continuation_throwingResume, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeTaskPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_continuation_throwingResumeWithError(AsyncTask *continuation,
//                                                 NeXTCodeError *error);
FUNCTION(ContinuationThrowingResumeWithError,
         nextcode_continuation_throwingResumeWithError, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeTaskPtrTy, ErrorPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// SerialExecutorRef nextcode_task_getCurrentExecutor();
FUNCTION(TaskGetCurrentExecutor,
         nextcode_task_getCurrentExecutor, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(NeXTCodeExecutorTy),
         ARGS(),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

// SerialExecutorRef nextcode_task_getMainExecutor();
FUNCTION(TaskGetMainExecutor,
         nextcode_task_getMainExecutor, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(NeXTCodeExecutorTy),
         ARGS(),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void nextcode_defaultActor_initialize(DefaultActor *actor);
FUNCTION(DefaultActorInitialize,
         nextcode_defaultActor_initialize, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_defaultActor_destroy(DefaultActor *actor);
FUNCTION(DefaultActorDestroy,
         nextcode_defaultActor_destroy, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_defaultActor_deallocate(DefaultActor *actor);
FUNCTION(DefaultActorDeallocate,
         nextcode_defaultActor_deallocate, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_defaultActor_deallocateResilient(HeapObject *actor);
FUNCTION(DefaultActorDeallocateResilient,
         nextcode_defaultActor_deallocateResilient, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_nonDefaultDistributedActor_initialize(NonDefaultDistributedActor *actor);
FUNCTION(NonDefaultDistributedActorInitialize,
         nextcode_nonDefaultDistributedActor_initialize, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// OpaqueValue* nextcode_distributedActor_remote_initialize(
//    const Metadata *actorType
// );
FUNCTION(DistributedActorInitializeRemote,
         nextcode_distributedActor_remote_initialize, NeXTCodeCC,
         ConcurrencyAvailability, // TODO(distributed): Introduce DistributedAvailability once shipping somewhere
         RETURNS(OpaquePtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

/// void nextcode_asyncLet_start(
///     AsyncLet *alet,
///     TaskOptionRecord *options,
///     const Metadata *futureResultType,
///     void *closureEntryPoint,
///     HeapObject *closureContext
/// );
FUNCTION(AsyncLetStart,
         nextcode_asyncLet_start, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeAsyncLetPtrTy,         // AsyncLet*
              NeXTCodeTaskOptionRecordPtrTy, // options
              TypeMetadataPtrTy,          // futureResultType
              Int8PtrTy,                  // closureEntry
              OpaquePtrTy                 // closureContext
         ),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

/// void nextcode_asyncLet_begin(
///     AsyncLet *alet,
///     TaskOptionRecord *options,
///     const Metadata *futureResultType,
///     void *closureEntryPoint,
///     HeapObject *closureContext,
///     void *resultBuffer
/// );
FUNCTION(AsyncLetBegin,
         nextcode_asyncLet_begin, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeAsyncLetPtrTy,         // AsyncLet*
              NeXTCodeTaskOptionRecordPtrTy, // options
              TypeMetadataPtrTy,          // futureResultType
              Int8PtrTy,                  // closureEntry
              OpaquePtrTy,                // closureContext
              Int8PtrTy
         ),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         MEMEFFECTS(ArgMemOnly))

// void nextcode_asyncLet_end(AsyncLet *alet);
FUNCTION(EndAsyncLet,
         nextcode_asyncLet_end, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(NeXTCodeAsyncLetPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

/// void nextcode_task_run_inline(
///     OpaqueValue *result,
///     void *closureAFP,
///     OpaqueValue *closureContext,
///     const Metadata *futureResultType
/// )
FUNCTION(TaskRunInline,
         nextcode_task_run_inline, NeXTCodeCC,
         TaskRunInlineAvailability,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy,       // OpaqueValue *result
              Int8PtrTy,         // void *closure
              OpaquePtrTy,       // OpaqueValue *closureContext
              TypeMetadataPtrTy, // const Metadata *futureResultType
         ),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_taskGroup_initialize(TaskGroup *group);
FUNCTION(TaskGroupInitialize,
         nextcode_taskGroup_initialize, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_taskGroup_initializeWithFlags(size_t flags, TaskGroup *group);
FUNCTION(TaskGroupInitializeWithFlags,
         nextcode_taskGroup_initializeWithFlags, NeXTCodeCC,
         ConcurrencyDiscardingTaskGroupAvailability,
         RETURNS(VoidTy),
         ARGS(SizeTy,           // flags
              Int8PtrTy,        // group
              TypeMetadataPtrTy // T.Type
         ),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// void nextcode_taskGroup_destroy(TaskGroup *group);
FUNCTION(TaskGroupDestroy,
         nextcode_taskGroup_destroy, NeXTCodeCC,
         ConcurrencyAvailability,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(Concurrency),
         UNKNOWN_MEMEFFECTS)

// AutoDiffLinearMapContext *nextcode_autoDiffCreateLinearMapContextWithType(const Metadata *);
FUNCTION(AutoDiffCreateLinearMapContextWithType,
         nextcode_autoDiffCreateLinearMapContextWithType, NeXTCodeCC,
         DifferentiationAvailability,
         RETURNS(RefCountedPtrTy),
         ARGS(TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(AutoDiff),
         MEMEFFECTS(ArgMemOnly))

// void *nextcode_autoDiffProjectTopLevelSubcontext(AutoDiffLinearMapContext *);
FUNCTION(AutoDiffProjectTopLevelSubcontext,
         nextcode_autoDiffProjectTopLevelSubcontext, NeXTCodeCC,
         DifferentiationAvailability,
         RETURNS(Int8PtrTy),
         ARGS(RefCountedPtrTy),
         ATTRS(NoUnwind),
         EFFECT(AutoDiff),
         MEMEFFECTS(ArgMemOnly))

// void *nextcode_autoDiffAllocateSubcontextWithType(AutoDiffLinearMapContext *, const Metadata *);
FUNCTION(AutoDiffAllocateSubcontextWithType,
         nextcode_autoDiffAllocateSubcontextWithType, NeXTCodeCC,
         DifferentiationAvailability,
         RETURNS(Int8PtrTy),
         ARGS(RefCountedPtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(AutoDiff),
         MEMEFFECTS(ArgMemOnly))

// NEXTCODE_RUNTIME_EXPORT
// unsigned nextcode_getMultiPayloadEnumTagSinglePayload(const OpaqueValue *value,
//                                                    uint32_t numExtraCases,
//                                                    const Metadata *enumType)
FUNCTION(GetMultiPayloadEnumTagSinglePayload,
         nextcode_getMultiPayloadEnumTagSinglePayload, C_CC,
         MultiPayloadEnumTagSinglePayloadAvailability,
         RETURNS(Int32Ty),
         ARGS(OpaquePtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// NEXTCODE_RUNTIME_EXPORT 
// void nextcode_storeMultiPayloadEnumTagSinglePayload(OpaqueValue *value,
//                                                   uint32_t index,
//                                                   uint32_t numExtraCases,
//                                                   const Metadata *enumType);
FUNCTION(StoreMultiPayloadEnumTagSinglePayload,
         nextcode_storeMultiPayloadEnumTagSinglePayload, C_CC,
         MultiPayloadEnumTagSinglePayloadAvailability,
         RETURNS(VoidTy),
         ARGS(OpaquePtrTy, Int32Ty, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_generic_destroy(opaque*, const Metadata* type);
FUNCTION(GenericDestroy,
         nextcode_generic_destroy,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(Deallocating),
         UNKNOWN_MEMEFFECTS)


// void *nextcode_generic_assignWithCopy(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericAssignWithCopy,
         nextcode_generic_assignWithCopy,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_generic_assignWithTake(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericAssignWithTake,
         nextcode_generic_assignWithTake,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting, Deallocating),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_generic_initWithCopy(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericInitWithCopy,
         nextcode_generic_initWithCopy,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_generic_initWithTake(opaque* dest, opaque* src, const Metadata* type);
FUNCTION(GenericInitWithTake,
         nextcode_generic_initWithTake,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(Int8PtrTy, Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// void *nextcode_generic_initializeBufferWithCopyOfBuffer(ValueBuffer* dest, ValueBuffer* src, const Metadata* type);
FUNCTION(GenericInitializeBufferWithCopyOfBuffer,
         nextcode_generic_initializeBufferWithCopyOfBuffer,
         C_CC, AlwaysAvailable,
         RETURNS(Int8PtrTy),
         ARGS(getFixedBufferTy()->getPointerTo(),
              getFixedBufferTy()->getPointerTo(),
              TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(RefCounting),
         UNKNOWN_MEMEFFECTS)

// unsigned nextcode_singletonEnum_getEnumTag(nextcode::OpaqueValue *address,
//                                         const Metadata *metadata);
FUNCTION(SingletonEnumGetEnumTag,
         nextcode_singletonEnum_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_singletonEnum_destructiveInjectEnumTag(nextcode::OpaqueValue *address,
//                                                   unsigned tag,
//                                                   const Metadata *metadata)
FUNCTION(SingletonEnumDestructiveInjectEnumTag,
         nextcode_singletonEnum_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned nextcode_enumSimple_getEnumTag(nextcode::OpaqueValue *address,
//                                      const Metadata *metadata);
FUNCTION(EnumSimpleGetEnumTag,
         nextcode_enumSimple_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned nextcode_enumSimple_destructiveInjectEnumTag(nextcode::OpaqueValue *address,
//                                                    unsigned tag,
//                                                    const Metadata *metadata)
FUNCTION(EnumSimpleDestructiveInjectEnumTag,
         nextcode_enumSimple_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned nextcode_enumFn_getEnumTag(nextcode::OpaqueValue *address,
//                                  const Metadata *metadata);
FUNCTION(EnumFnGetEnumTag,
         nextcode_enumFn_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned nextcode_multiPayloadEnumGeneric_getEnumTag(opaque* address,
//                                                   const Metadata *type);
FUNCTION(MultiPayloadEnumGenericGetEnumTag,
         nextcode_multiPayloadEnumGeneric_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_multiPayloadEnumGeneric_destructiveInjectEnumTag(nextcode::OpaqueValue *address,
//                                                             unsigned tag,
//                                                             const Metadata *metadata)
FUNCTION(MultiPayloadEnumGenericDestructiveInjectEnumTag,
         nextcode_multiPayloadEnumGeneric_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// unsigned nextcode_singlePayloadEnumGeneric_getEnumTag(nextcode::OpaqueValue *address,
//                                                    const Metadata *metadata);
FUNCTION(SinglePayloadEnumGenericGetEnumTag,
         nextcode_singlePayloadEnumGeneric_getEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_singlePayloadEnumGeneric_destructiveInjectEnumTag(nextcode::OpaqueValue *address,
//                                                              unsigned tag,
//                                                              const Metadata *metadata)
FUNCTION(SinglePayloadEnumGenericDestructiveInjectEnumTag,
         nextcode_singlePayloadEnumGeneric_destructiveInjectEnumTag,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, Int32Ty, TypeMetadataPtrTy),
         ATTRS(NoUnwind, WillReturn),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

// void nextcode_generic_instantiateLayoutString(const uint8_t* layoutStr,
//                                            Metadata* type);
FUNCTION(GenericInstantiateLayoutString,
         nextcode_generic_instantiateLayoutString,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(Int8PtrTy, TypeMetadataPtrTy),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// void nextcode_initRawStructMetadata(Metadata *structType,
//                                  StructLayoutFlags flags,
//                                  const TypeLayout *likeType,
//                                  int32_t count);
FUNCTION(InitRawStructMetadata,
         nextcode_initRawStructMetadata,
         C_CC, AlwaysAvailable,
         RETURNS(VoidTy),
         ARGS(TypeMetadataPtrTy, SizeTy, Int8PtrPtrTy->getPointerTo(0), Int32Ty),
         ATTRS(NoUnwind),
         EFFECT(MetaData),
         UNKNOWN_MEMEFFECTS)

// _Unwind_Reason_Code _nextcode_exceptionPersonality(int version,
//                                                 _Unwind_Action actions,
//                                                 uint64 exceptionClass,
//                                                 struct _Unwind_Exception *exceptionObject,
//                                                 struct _Unwind_Context *context);
FUNCTION(ExceptionPersonality,
         _nextcode_exceptionPersonality,
         C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(Int32Ty,
              Int32Ty,
              Int64Ty,
              Int8PtrTy,
              Int8PtrTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(ClearSensitive, nextcode_clearSensitive, C_CC, ClearSensitiveAvailability,
         RETURNS(VoidTy),
         ARGS(PtrTy, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

FUNCTION(MemsetS, memset_s, C_CC, AlwaysAvailable,
         RETURNS(Int32Ty),
         ARGS(PtrTy, SizeTy, Int32Ty, SizeTy),
         ATTRS(NoUnwind),
         EFFECT(NoEffect),
         UNKNOWN_MEMEFFECTS)

#undef RETURNS
#undef ARGS
#undef ATTRS
#undef NO_ARGS
#undef NO_ATTRS
#undef FUNCTION
#undef FUNCTION_NAME
