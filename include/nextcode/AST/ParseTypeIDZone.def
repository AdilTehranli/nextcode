//===--- ParseTypeIDZone.def ------------------------------------*- C++ -*-===//
//
/*
 * Copyright (c) 2024, NeXTech Corporation. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * Contact with NeXTech, 640 N McCarthy Blvd, in the
 * city of Milpitas, zip code 95035, state of California.
 * or visit www.it-gss.com if you need additional information or have any
 * questions.
 */

// Author(-s): Tunjay Akbarli (tunjayakbarli@it-gss.com)
//
//===----------------------------------------------------------------------===//
//
//  This definition file describes the requests in the parser's zone.
//
//===----------------------------------------------------------------------===//

NEXTCODE_REQUEST(Parse, IDEInspectionSecondPassRequest,
              bool (SourceFile *, IDEInspectionCallbacksFactory *),
              Uncached, NoLocationInfo)
NEXTCODE_REQUEST(Parse, ParseMembersRequest,
              FingerprintAndMembers(IterableDeclContext *), Cached, NoLocationInfo)
NEXTCODE_REQUEST(Parse, ParseAbstractFunctionBodyRequest,
              BodyAndFingerprint(AbstractFunctionDecl *), SeparatelyCached,
              NoLocationInfo)
NEXTCODE_REQUEST(Parse, ParseSourceFileRequest,
              SourceFileParsingResult(SourceFile *), SeparatelyCached,
              NoLocationInfo)
NEXTCODE_REQUEST(Parse, ParseTopLevelDeclsRequest,
              ArrayRef<Decl *>(SourceFile *), Cached,
              NoLocationInfo)
NEXTCODE_REQUEST(Parse, ExportedSourceFileRequest,
              void *(const SourceFile *), Cached,
              NoLocationInfo)
